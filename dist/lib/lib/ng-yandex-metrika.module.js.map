{"version":3,"file":"ng-yandex-metrika.module.js","sourceRoot":"","sources":["../../../src/lib/ng-yandex-metrika.module.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAC,eAAe,EAAE,QAAQ,EAAuB,QAAQ,EAAE,WAAW,EAAC,MAAM,eAAe,CAAC;AAEpG,OAAO,EAAC,YAAY,EAAC,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAC,qBAAqB,EAAE,eAAe,EAAE,uBAAuB,GAAE,MAAM,sCAAsC,CAAC;AAEtH,OAAO,EACL,kBAAkB,EAClB,sBAAsB,EACtB,uBAAuB,EACvB,2BAA2B,EAC5B,MAAM,4BAA4B,CAAC;AAG7B,IAAM,kBAAkB,0BAAxB,MAAM,kBAAkB;IAC7B,MAAM,CAAC,OAAO,CAAC,OAAwC,EAAE,gBAAyB;QAChF,OAAO;YACL,QAAQ,EAAE,oBAAkB;YAC5B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,sBAAsB;oBAC/B,QAAQ,EAAE,gBAAgB;iBAC3B;gBACD;oBACE,OAAO,EAAE,2BAA2B;oBACpC,QAAQ,EAAE,OAAO;iBAClB;gBACD;oBACE,OAAO,EAAE,kBAAkB;oBAC3B,UAAU,EAAE,uBAAuB;oBACnC,IAAI,EAAE,CAAC,2BAA2B,EAAE,sBAAsB,CAAC;iBAC5D;gBACD;oBACE,OAAO,EAAE,uBAAuB;oBAChC,UAAU,EAAE,eAAe;oBAC3B,IAAI,EAAE,CAAC,2BAA2B,CAAC;iBACpC;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,qBAAqB;oBACjC,IAAI,EAAE,CAAC,uBAAuB,EAAE,WAAW,CAAC;oBAC5C,KAAK,EAAE,IAAI;iBACZ;gBACD;oBACE,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,YAAY;oBACtB,IAAI,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;iBAC9B;aACF;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AArCY,kBAAkB;IAD9B,QAAQ,CAAC,EAAE,CAAC;GACA,kBAAkB,CAqC9B;SArCY,kBAAkB","sourcesContent":["import {APP_INITIALIZER, Injector, ModuleWithProviders, NgModule, PLATFORM_ID} from '@angular/core';\r\n\r\nimport {YandexMetric} from './ng-yandex-metrika.service';\r\nimport {appInitializerFactory, countersFactory, defaultCounterIdFactory,} from './ng-yandex-metrika-config-factories';\r\nimport {CounterConfig} from \"./common/interfaces/counterConfig.interface\";\r\nimport {\r\n  DEFAULT_COUNTER_ID,\r\n  DEFAULT_COUNTER_ID_AOT,\r\n  YANDEX_COUNTERS_CONFIGS,\r\n  YANDEX_COUNTERS_CONFIGS_AOT\r\n} from \"./common/constants.service\";\r\n\r\n@NgModule({})\r\nexport class YandexMetricModule {\r\n  static forRoot(configs: CounterConfig | CounterConfig[], defaultCounterId?: string): ModuleWithProviders<YandexMetricModule> {\r\n    return {\r\n      ngModule: YandexMetricModule,\r\n      providers: [\r\n        {\r\n          provide: DEFAULT_COUNTER_ID_AOT,\r\n          useValue: defaultCounterId,\r\n        },\r\n        {\r\n          provide: YANDEX_COUNTERS_CONFIGS_AOT,\r\n          useValue: configs,\r\n        },\r\n        {\r\n          provide: DEFAULT_COUNTER_ID,\r\n          useFactory: defaultCounterIdFactory,\r\n          deps: [YANDEX_COUNTERS_CONFIGS_AOT, DEFAULT_COUNTER_ID_AOT],\r\n        },\r\n        {\r\n          provide: YANDEX_COUNTERS_CONFIGS,\r\n          useFactory: countersFactory,\r\n          deps: [YANDEX_COUNTERS_CONFIGS_AOT],\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: appInitializerFactory,\r\n          deps: [YANDEX_COUNTERS_CONFIGS, PLATFORM_ID],\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: YandexMetric,\r\n          useClass: YandexMetric,\r\n          deps: [Injector, PLATFORM_ID],\r\n        }\r\n      ],\r\n    };\r\n  }\r\n}\r\n"]}